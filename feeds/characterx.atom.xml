<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>Fregram Blog - CharacterX</title><link href="http://blog.fregram.com/" rel="alternate"></link><link href="/feeds/characterx.atom.xml" rel="self"></link><id>http://blog.fregram.com/</id><updated>2016-07-26T14:00:00+03:00</updated><entry><title>Just a test</title><link href="http://blog.fregram.com/just-a-test/" rel="alternate"></link><published>2016-07-26T14:00:00+03:00</published><updated>2016-07-26T14:00:00+03:00</updated><author><name>CharacterX</name></author><id>tag:blog.fregram.com,2016-07-26:/just-a-test/</id><summary type="html">&lt;p&gt;For a while, nothing has been written on this blog. Because of that, I forgot how to write. We are using files with .rst extension. I looked it up on the internet and i learnt that it stands for reStructuredText. Wikipedia has some examples on it. Here are some:&lt;/p&gt;
&lt;div class="section" id="section-header"&gt;
&lt;h2&gt;Section …&lt;/h2&gt;&lt;/div&gt;</summary><content type="html">&lt;p&gt;For a while, nothing has been written on this blog. Because of that, I forgot how to write. We are using files with .rst extension. I looked it up on the internet and i learnt that it stands for reStructuredText. Wikipedia has some examples on it. Here are some:&lt;/p&gt;
&lt;div class="section" id="section-header"&gt;
&lt;h2&gt;Section Header&lt;/h2&gt;
&lt;div class="section" id="subsection-header"&gt;
&lt;h3&gt;Subsection Header&lt;/h3&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;A bullet list item&lt;/li&gt;
&lt;li&gt;Second item&lt;ul&gt;
&lt;li&gt;A sub item&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Spacing between items creates separate lists&lt;/li&gt;
&lt;li&gt;Third item&lt;/li&gt;
&lt;/ul&gt;
&lt;ol class="arabic"&gt;
&lt;li&gt;&lt;p class="first"&gt;An enumerated list item&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p class="first"&gt;Second item&lt;/p&gt;
&lt;ol class="loweralpha"&gt;
&lt;li&gt;&lt;p class="first"&gt;Sub item that goes on at length and thus needs
to be wrapped. Note the indentation that must
match the beginning of the text, not the
enumerator.&lt;/p&gt;
&lt;ol class="lowerroman"&gt;
&lt;li&gt;&lt;p class="first"&gt;List items can even include&lt;/p&gt;
&lt;p&gt;paragraph breaks.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p class="first"&gt;Third item&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p class="first"&gt;Another enumerated list item&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p class="first"&gt;Second item&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;We can use images:&lt;/p&gt;
&lt;img alt="" src="/images/dafuq.jpg" /&gt;
&lt;p&gt;A sentence with links to &lt;a class="reference external" href="http://www.wikipedia.org/"&gt;Wikipedia&lt;/a&gt; and the &lt;a class="reference external" href="http://www.kernel.org/"&gt;Linux kernel archive&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Another sentence with an &lt;a class="reference external" href="https://www.python.org/"&gt;anonymous link to the Python website&lt;/a&gt;.&lt;/p&gt;
&lt;pre class="literal-block"&gt;
some literal text
&lt;/pre&gt;
&lt;p&gt;This may also be used inline at the end of a paragraph, like so:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
some more literal text
&lt;/pre&gt;
&lt;pre class="code python literal-block"&gt;
&lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;A literal block directive explicitly marked as python code&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
</content><category term="test"></category><category term="other"></category></entry><entry><title>TC SRM144 DIV2 200pts C++</title><link href="http://blog.fregram.com/tc-srm144-div2-200pts-c/" rel="alternate"></link><published>2014-03-15T10:28:00+02:00</published><updated>2014-03-15T10:28:00+02:00</updated><author><name>CharacterX</name></author><id>tag:blog.fregram.com,2014-03-15:/tc-srm144-div2-200pts-c/</id><summary type="html">&lt;p&gt;In this question we are given an integer, seconds. And the question asked us to return it in the  hours:minutes:seconds format. The given integer, seconds, is between 0 and 86399.&lt;/p&gt;
&lt;p&gt;I defined 3 integers: hour, min, sec. I assigned seconds%60 to sec in order to find the …&lt;/p&gt;</summary><content type="html">&lt;p&gt;In this question we are given an integer, seconds. And the question asked us to return it in the  hours:minutes:seconds format. The given integer, seconds, is between 0 and 86399.&lt;/p&gt;
&lt;p&gt;I defined 3 integers: hour, min, sec. I assigned seconds%60 to sec in order to find the remaining from its devision by 60. That will give me the sec part of the format because everything that can be divisible by 60 will be consumed by minutes and hours. After that i did the same to min and hour. While i was calculating hour, i didn't need to take its module because the input was between 0 and 86399 and it could not pass the value of 24.&lt;/p&gt;
&lt;div class="section" id="the-code-is-here"&gt;
&lt;h2&gt;The code is here:&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="cp"&gt;#include&lt;/span&gt; &lt;span class="cpf"&gt;&amp;lt;iostream&amp;gt;&lt;/span&gt;&lt;span class="cp"&gt;&lt;/span&gt;
&lt;span class="cp"&gt;#include&lt;/span&gt; &lt;span class="cpf"&gt;&amp;lt;string&amp;gt;&lt;/span&gt;&lt;span class="cp"&gt;&lt;/span&gt;
&lt;span class="k"&gt;using&lt;/span&gt; &lt;span class="k"&gt;namespace&lt;/span&gt; &lt;span class="n"&gt;std&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;Time&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="k"&gt;public&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;
    &lt;span class="n"&gt;string&lt;/span&gt; &lt;span class="n"&gt;whatTime&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;seconds&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;sec&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;hour&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;min&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="n"&gt;sec&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;seconds&lt;/span&gt;&lt;span class="o"&gt;%&lt;/span&gt;&lt;span class="mi"&gt;60&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="n"&gt;min&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;seconds&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mi"&gt;60&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;%&lt;/span&gt;&lt;span class="mi"&gt;60&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="n"&gt;hour&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;seconds&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mi"&gt;3600&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nf"&gt;to_string&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;hour&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;:&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="n"&gt;to_string&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;min&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;:&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="n"&gt;to_string&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;sec&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
</content><category term="topcoder"></category><category term="srm"></category><category term="C++"></category><category term="200"></category><category term="point"></category></entry></feed>