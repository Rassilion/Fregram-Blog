{"componentChunkName":"component---src-gatsby-theme-chronoblog-templates-post-js","path":"/tc-srm144-div2-200pts-python","result":{"data":{"mdx":{"id":"542e0d01-eff1-5fcb-b2f9-8cf4658c33e8","excerpt":"Problem wants us to convert seconds integer to  Hour:Minute:Second  string format.","frontmatter":{"category":"TopCoder","author":"Rassilion","title":"TC SRM144 DIV2 200pts Python","date":"2014-03-15T00:00:00.000Z","description":null,"tags":["topcoder","python","srm","200point"],"cover":null},"fields":{"slug":"/tc-srm144-div2-200pts-python"},"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"TC SRM144 DIV2 200pts Python\",\n  \"slug\": \"TC SRM144 DIV2 200pts Python\",\n  \"date\": \"2014-03-15T00:00:00.000Z\",\n  \"tags\": [\"topcoder\", \"python\", \"srm\", \"200point\"],\n  \"category\": \"TopCoder\",\n  \"author\": \"Rassilion\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"Problem wants us to convert seconds integer to \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"Hour:Minute:Second\"), \" string format.\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-python\"\n  }), \"#class, function names and variables were given in the problem.\\nclass Time(object):\\ndef whatTime(self, seconds):\\n    #I divided seconds by 3600 because 1 hour is 3600 second.\\n    h = seconds / 3600\\n    #I divided remaining from hour by 60\\n    m = (seconds % 3600) / 60\\n    #I find remaining from seconds division by 60,\\n    #because everything that can be divisible by 60 will be used by hour and minute\\n    s = (seconds % 60)\\n    #Put them in H:M:S string format\\n    return str(h)+\\\":\\\"+str(m)+\\\":\\\"+str(s)\\n\")));\n}\n;\nMDXContent.isMDXComponent = true;"}},"pageContext":{"id":"542e0d01-eff1-5fcb-b2f9-8cf4658c33e8"}},"staticQueryHashes":["1961101537","2542493696"]}